[{"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\index.js":"1","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\App.js":"2","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\reportWebVitals.js":"3","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Testpage\\Testpage.js":"4","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Landing\\Landing.js":"5","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Staff_Dashboard.js":"6","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Student_Dashboard.js":"7","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Chatroom\\Chatroom.js":"8","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Forum\\Forum.js":"9","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Schedule\\Schedule.js":"10","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Booking\\Booking.js":"11","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Chatroom\\Chatroom.js":"12","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Messages\\Messages.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":929,"mtime":1611588391914,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":7494,"mtime":1611070473675,"results":"18","hashOfConfig":"15"},{"size":13141,"mtime":1612867365843,"results":"19","hashOfConfig":"15"},{"size":9098,"mtime":1611704329243,"results":"20","hashOfConfig":"15"},{"size":9192,"mtime":1612444812918,"results":"21","hashOfConfig":"15"},{"size":379,"mtime":1611664807419,"results":"22","hashOfConfig":"15"},{"size":52952,"mtime":1612443150549,"results":"23","hashOfConfig":"15"},{"size":7615,"mtime":1612298202655,"results":"24","hashOfConfig":"15"},{"size":5062,"mtime":1612802974750,"results":"25","hashOfConfig":"15"},{"size":259,"mtime":1612443467650,"results":"26","hashOfConfig":"15"},{"size":6248,"mtime":1612869310012,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"kxsj5s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"30"},"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\index.js",[],["66","67"],"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\App.js",[],"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\reportWebVitals.js",[],"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Testpage\\Testpage.js",["68","69"],"import React, { Component } from 'react';\r\n\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, Stack, SimpleGrid, Box, Grid, GridItem\r\n} from \"@chakra-ui/react\"\r\nimport { MdBuild, MdCall } from \"react-icons/md\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**material ui imports */\r\nimport { Button as MUIButton } from '@material-ui/core';\r\n\r\n/**react bootstrap imports */\r\nimport { Button as RBButton, Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport logo from '../../assets/kstu.png';\r\n\r\nclass Testpage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ChakraProvider>\r\n                <div>\r\n\r\n                    {/**material ui components */}\r\n                    material ui components<br />\r\n                    <MUIButton variant=\"contained\">Default</MUIButton>\r\n                    <MUIButton variant=\"contained\" color=\"primary\">\r\n                        Primary\r\n                    </MUIButton>\r\n                    <MUIButton variant=\"contained\" color=\"secondary\">\r\n                        Secondary\r\n                    </MUIButton>\r\n                    <MUIButton variant=\"contained\" disabled>\r\n                        Disabled\r\n                    </MUIButton>\r\n                    <MUIButton variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\r\n                        Link\r\n                    </MUIButton>\r\n\r\n                    <br /><br />\r\n\r\n                    getbootstrap components<br />\r\n                    {/**getbootstrap components */}\r\n                    <button type=\"button\" class=\"btn btn-primary\">Primary</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\">Secondary</button>\r\n                    <button type=\"button\" class=\"btn btn-success\">Success</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\">Danger</button>\r\n                    <button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n                    <button type=\"button\" class=\"btn btn-info\">Info</button>\r\n                    <button type=\"button\" class=\"btn btn-light\">Light</button>\r\n                    <button type=\"button\" class=\"btn btn-dark\">Dark</button>\r\n                    <button type=\"button\" class=\"btn btn-link\">Link</button>\r\n\r\n                    <br /><br />\r\n\r\n                    react-bootstrap components<br />\r\n                    {/**react-bootstrap components */}\r\n                    <RBButton variant=\"primary\">Primary</RBButton>{' '}\r\n                    <RBButton variant=\"secondary\">Secondary</RBButton>{' '}\r\n                    <RBButton variant=\"success\">Success</RBButton>{' '}\r\n                    <RBButton variant=\"warning\">Warning</RBButton>{' '}\r\n                    <RBButton variant=\"danger\">Danger</RBButton> <RBButton variant=\"info\">Info</RBButton>{' '}\r\n                    <RBButton variant=\"light\">Light</RBButton> <RBButton variant=\"dark\">Dark</RBButton>{' '}\r\n                    <RBButton variant=\"link\">Link</RBButton>\r\n\r\n\r\n                    {/**responsive grids */}\r\n                    <Container fluid style={{ background: 'red' }}>\r\n                        <Row>\r\n                            <Col\r\n                                xl={6} /**full screen ≥1200px*/\r\n                                lg={6} /**slight reduction ≥992px*/\r\n                                md={6} /**half screen ≥768px*/\r\n                                sm={6} /**reduction in half screen ≥576px*/\r\n                                xs={6}  /**phone screen <576px*/\r\n                                // xl={true}   /**true property is used for auto layout */\r\n                                style={{ background: 'yellow' }}>1 of 2</Col>\r\n                            <Col xl={6} lg={6} md={6} sm={6} xs={6} style={{ background: 'green' }}>2 of 2</Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n\r\n                    <img\r\n                        src={logo} style={{ width: 120, height: 120 }}\r\n                        alt=\"\"\r\n                    />\r\n\r\n                    <img\r\n                        style={{ width: 120, height: 120 }}\r\n                        src=\"https://images.pexels.com/photos/20787/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350\"\r\n                        alt=\"new\"\r\n                    />\r\n                    <br />\r\n\r\n\r\n                    chakra ui components<br />\r\n                    {/**chakra ui components */}\r\n                    <ButtonGroup direction=\"row\" spacing={3} align=\"center\">\r\n                        <CUIButton colorScheme=\"teal\" variant=\"solid\">\r\n                            Button\r\n                        </CUIButton>\r\n                        <CUIButton colorScheme=\"teal\" variant=\"outline\">\r\n                            Button\r\n                        </CUIButton>\r\n\r\n                        <CUIButton leftIcon={<MdBuild />} colorScheme=\"pink\" variant=\"solid\">\r\n                            Settings\r\n                        </CUIButton>\r\n                        <CUIButton rightIcon={<MdCall />} colorScheme=\"blue\" variant=\"outline\">\r\n                            Call us\r\n                        </CUIButton>\r\n\r\n                        <CUIButton\r\n                            isLoading={true}\r\n                            loadingText=\"Submitting\"\r\n                            colorScheme=\"teal\"\r\n                            variant=\"outline\">\r\n                            Submit\r\n                        </CUIButton>\r\n\r\n                        <CUIButton colorScheme=\"facebook\" leftIcon={<FaFacebook />}>\r\n                            Facebook\r\n                        </CUIButton>\r\n                        <CUIButton colorScheme=\"twitter\" leftIcon={<FaTwitter />}>\r\n                            Twitter\r\n                        </CUIButton>\r\n\r\n                    </ButtonGroup>\r\n\r\n                    <br /><br />\r\n\r\n                    <Container fluid >\r\n                        <Row>\r\n                            <Col style={{ background: 'yellow', height: '20vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <div>material ui grid</div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <br />\r\n                    chakra ui simple grid component\r\n                    <SimpleGrid columns={{ xs: 2, sm: 2, md: 2, lg: 2, xl: 2 }} spacingX=\"10px\" spacingY=\"10px\">\r\n                        <Box style={{ background: 'red', height: 80 }}></Box>\r\n                        <Box style={{ background: 'yellow', height: 80 }}></Box>\r\n                        <Box style={{ background: 'green', height: 80 }}></Box>\r\n                    </SimpleGrid>\r\n\r\n                    <br />\r\n                    chakra ui grid component\r\n                    <Grid\r\n                        h=\"200px\"\r\n                        templateRows=\"repeat(2, 1fr)\"\r\n                        templateColumns=\"repeat(5, 1fr)\"\r\n                        gap={4}>\r\n                        <GridItem rowSpan={2} colSpan={1} bg=\"tomato\" />\r\n                        <GridItem colSpan={2} bg=\"papayawhip\" />\r\n                        <GridItem colSpan={2} bg=\"papayawhip\" />\r\n                        <GridItem colSpan={4} bg=\"tomato\" />\r\n                    </Grid>\r\n                </div>\r\n            </ChakraProvider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Testpage;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Landing\\Landing.js",["70","71","72","73","74","75","76","77","78","79"],"import React, { Component } from 'react';\r\n\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, Stack, SimpleGrid, Box, Grid, GridItem, Wrap,\r\n    WrapItem, Avatar, Input\r\n} from \"@chakra-ui/react\"\r\n\r\n/**material ui imports */\r\nimport {\r\n    Button as MUIButton, Typography,\r\n    TextField,\r\n} from '@material-ui/core';\r\n\r\n/**react bootstrap imports */\r\nimport {\r\n    Button as RBButton, Container, Row, Col,\r\n    Card,\r\n    CardDeck\r\n} from 'react-bootstrap';\r\n\r\n/**animations */\r\nimport { Zoom, Slide, Flip } from 'react-reveal';\r\n\r\n// image imports\r\nimport landingbackground from '../../assets/background2.jpg';\r\nimport student_login_avatar from '../../assets/student.jpg';\r\nimport staff_login_avatar from '../../assets/staff.jpg';\r\n\r\nimport { Redirect } from 'react-router' /**navigation***  1 */\r\n\r\nclass Landing extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            /**we navigate to either page when its set to true */\r\n            student_redirect: false,  /**navigation***  2 */\r\n            staff_redirect: false,  /**navigation***  2 */\r\n\r\n            /**switch between the student or staff login form */\r\n            staff_login_tab_selected: true,\r\n            student_login_tab_selected: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        /**navigation***  3 */\r\n        if (this.state.student_redirect) {\r\n            return <Redirect push to=\"student/dashboard\" />;\r\n        }\r\n\r\n        /**navigation***  3 */\r\n        if (this.state.staff_redirect) {\r\n            return <Redirect push to=\"staff/dashboard\" />;\r\n        }\r\n\r\n\r\n        return (\r\n            <ChakraProvider>\r\n                <Container fluid style={{ backgroundImage: `url(${landingbackground})` }}>\r\n                    <Row>\r\n                        <Col style={{ background: 'transparent', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n                            {/**shadow covering login card */}\r\n                            <div class=\"shadow-lg rounded\" style={{ background: 'transparent' }}>\r\n\r\n                                {/**login card  */}\r\n                                <Card className=\"text-center\" style={{ background: 'reds', borderColor: 'transparent' }}>\r\n\r\n                                    {/**staff and student switch header container */}\r\n                                    <Container fluid style={{ background: 'reds', padding: 0, marginTop: 20, marginBottom: 25 }}>\r\n                                        <Row>\r\n\r\n                                            {/**staff switch header */}\r\n                                            <Col style={{ display: 'flex', background: 'pinks', margin: 0, justifyContent: 'flex-end' }}>\r\n                                                <Typography\r\n                                                    onClick={() => { this.switch_to_staff_login_section() }}\r\n                                                    style={{ color: 'gray', fontSize: 14, cursor: 'pointer' }}\r\n                                                >\r\n                                                    STAFF\r\n                                                    {this.state.staff_login_tab_selected ?\r\n                                                        <Slide right>\r\n                                                            <div style={{ background: 'reds', borderBottom: '2px solid dodgerblue' }}></div>\r\n                                                        </Slide>\r\n                                                        :\r\n                                                        <div></div>\r\n                                                    }\r\n                                                </Typography>\r\n                                            </Col>\r\n\r\n                                            {/**student switch header */}\r\n                                            <Col style={{ display: 'flex', background: 'greens', margin: 0, justifyContent: 'flex-start' }}>\r\n                                                <Typography\r\n                                                    onClick={() => { this.switch_to_student_login_section() }}\r\n                                                    style={{ color: 'gray', fontSize: 14, cursor: 'pointer' }}\r\n                                                >\r\n                                                    STUDENT\r\n                                                    {this.state.student_login_tab_selected ?\r\n                                                        <Slide left>\r\n                                                            <div style={{ background: 'reds', borderBottom: '2px solid dodgerblue' }}></div>\r\n                                                        </Slide>\r\n                                                        :\r\n                                                        <div></div>\r\n                                                    }\r\n                                                </Typography>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n\r\n                                    {/**Staff avatar, inputfields, button and footer container */}\r\n                                    {this.state.staff_login_tab_selected ?\r\n                                        <Flip right>\r\n                                            <Container fluid style={{ background: 'reds', paddingLeft: 0, paddingRight: 0 }}>\r\n\r\n                                                {/**staff avatar container */}\r\n                                                <Container style={{ marginBottom: 15 }}>\r\n                                                    <Row>\r\n                                                        <Col></Col>\r\n                                                        <Col>\r\n                                                            <Wrap>\r\n                                                                <WrapItem>\r\n                                                                    <Avatar size=\"2xl\" name=\"staff avatar\" src={staff_login_avatar} />\r\n                                                                </WrapItem>\r\n                                                            </Wrap>\r\n                                                        </Col>\r\n                                                        <Col></Col>\r\n                                                    </Row>\r\n                                                </Container>\r\n\r\n                                                {/**staff input fields and button section */}\r\n                                                <Card.Body>\r\n                                                    <Stack spacing={4}>\r\n                                                        <Input variant=\"filled\" placeholder=\"Username\" />\r\n                                                        <Input variant=\"filled\" placeholder=\"Password\" />\r\n\r\n                                                        <CUIButton\r\n                                                            onClick={() => { this.staff_login() }}\r\n                                                            isLoading={false}\r\n                                                            loadingText=\"Logging in\"\r\n                                                            colorScheme=\"twitter\"\r\n                                                            variant=\"solid\"\r\n                                                            size=\"md\"\r\n                                                            style={{ marginLeft: 20, marginRight: 20 }}\r\n                                                        >\r\n                                                            Log in\r\n                                                 </CUIButton>\r\n                                                    </Stack>\r\n                                                </Card.Body>\r\n\r\n                                                {/**staff footer section */}\r\n                                                <Card.Footer className=\"text-muted\" style={{ background: 'yellows' }} >\r\n                                                    <Card.Text style={{ fontSize: 12 }}>\r\n                                                        Forgot password?\r\n                                                    </Card.Text>\r\n                                                </Card.Footer>\r\n                                            </Container>\r\n                                        </Flip>\r\n                                        :\r\n                                        <div></div>\r\n                                    }\r\n\r\n\r\n\r\n                                    {/**Student avatar, inputfields, button and footer container */}\r\n                                    {this.state.student_login_tab_selected ?\r\n                                        <Flip left>\r\n                                            <Container fluid style={{ background: 'reds', paddingLeft: 0, paddingRight: 0 }}>\r\n\r\n                                                {/**student avatar container */}\r\n                                                <Container style={{ marginBottom: 15 }}>\r\n                                                    <Row>\r\n                                                        <Col></Col>\r\n                                                        <Col>\r\n                                                            <Wrap>\r\n                                                                <WrapItem>\r\n                                                                    <Avatar size=\"2xl\" name=\"student avatar\" src={student_login_avatar} />\r\n                                                                </WrapItem>\r\n                                                            </Wrap>\r\n                                                        </Col>\r\n                                                        <Col></Col>\r\n                                                    </Row>\r\n                                                </Container>\r\n\r\n                                                {/**student input fields and button section */}\r\n                                                <Card.Body>\r\n                                                    <Stack spacing={4}>\r\n                                                        <Input variant=\"filled\" placeholder=\"Student number\" />\r\n                                                        <Input variant=\"filled\" placeholder=\"Password\" />\r\n\r\n                                                        <CUIButton\r\n                                                            onClick={() => { this.student_login() }}\r\n                                                            isLoading={false}\r\n                                                            loadingText=\"Logging in\"\r\n                                                            colorScheme=\"twitter\"\r\n                                                            variant=\"solid\"\r\n                                                            size=\"md\"\r\n                                                            style={{ marginLeft: 20, marginRight: 20 }}\r\n                                                        >\r\n                                                            Log in\r\n                                                 </CUIButton>\r\n                                                    </Stack>\r\n                                                </Card.Body>\r\n\r\n                                                {/**student footer section */}\r\n                                                <Card.Footer className=\"text-muted\" style={{ background: 'yellows' }} >\r\n                                                    <Card.Text style={{ fontSize: 12 }}>\r\n                                                        Forgot password?\r\n                                         </Card.Text>\r\n                                                </Card.Footer>\r\n                                            </Container>\r\n                                        </Flip>\r\n                                        :\r\n                                        <div></div>\r\n                                    }\r\n\r\n\r\n                                </Card>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ChakraProvider>\r\n        )\r\n    }\r\n\r\n    switch_to_staff_login_section() {\r\n        this.setState({ staff_login_tab_selected: true })\r\n        this.setState({ student_login_tab_selected: false })\r\n    }\r\n\r\n    switch_to_student_login_section() {\r\n        this.setState({ student_login_tab_selected: true })\r\n        this.setState({ staff_login_tab_selected: false })\r\n    }\r\n\r\n    staff_login() {\r\n        this.setState({ staff_redirect: true })\r\n    }\r\n\r\n    student_login() {\r\n        this.setState({ student_redirect: true })\r\n    }\r\n\r\n}\r\nexport default Landing;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Staff_Dashboard.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React, { Component } from 'react';\r\nimport '../Staff_Dashboard/Staff_Dashboard.css'\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\"\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, SimpleGrid, Box, Grid, GridItem, Wrap,\r\n    WrapItem, Avatar, Input, Stack, HStack, VStack, flexbox\r\n} from \"@chakra-ui/react\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**material ui imports */\r\nimport {\r\n    Button as MUIButton, List,\r\n    ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core';\r\nimport { PeopleIcon } from '@material-ui/icons'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n/**react bootstrap imports */\r\nimport {\r\n    Button as RBButton, Container, Row, Col,\r\n    Card,\r\n    CardDeck\r\n} from 'react-bootstrap';\r\n\r\n/**dashboard menu items */\r\nimport ScheduleComponent from './Dashboard_menu_items/Schedule/Schedule'\r\nimport ChatroomComponent from './Dashboard_menu_items/Chatroom/Chatroom'\r\nimport ForumComponent from './Dashboard_menu_items/Forum/Forum'\r\n\r\n/**fontawesome icon imports */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTimes, faBars, faCalendar, faBook,\r\n    faComment\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nlibrary.add(faTimes, faBars, faCalendar, faBook, faComment)\r\n\r\nclass Staff_Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            /**hamburger menu is hidden by default when page is viewed on desktop */\r\n            mobileview_menu_opened: false,\r\n\r\n            /**our default selected item in the drawer is schedule\r\n             * the value changes when the user selects a different item in th drawer\r\n             * and we give the selected drawer item css properties to make it active */\r\n            selected_drawer_item: 'schedule'\r\n        }\r\n\r\n    }\r\n\r\n    /**mobile view function to toggle the drawer */\r\n    toggle_drawer = () => {\r\n        this.setState({ mobileview_menu_opened: !this.state.mobileview_menu_opened })\r\n    }\r\n\r\n    /**after selecting any list item from the drawer in mobile view we want to automatically close the drawer */\r\n    close_drawer() {\r\n        this.setState({ mobileview_menu_opened: false })\r\n    }\r\n\r\n    /**set the selected drawer item to be active to differentiate it from other list items */\r\n    set_active_drawer_item(drawer_item_name) {\r\n        this.setState({ selected_drawer_item: drawer_item_name })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <ChakraProvider>\r\n\r\n                    {/**page setup */}\r\n                    <div className=\"pagesetup\">\r\n\r\n                        {/** column 1 of page setup...drawer menu */}\r\n                        <div className=\"sidemenu_column\">\r\n\r\n                            {/**nav menu container */}\r\n                            <nav className=\"navmenu_container\">\r\n\r\n                                {/**nav menu header */}\r\n                                <div className=\"navmenu_header\" >\r\n\r\n                                    {/**header avatar */}\r\n                                    <Wrap className=\"avatar_wrapper_container\" >\r\n                                        <WrapItem>\r\n                                            <Avatar size=\"sm\" name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\r\n                                        </WrapItem>\r\n                                    </Wrap>\r\n\r\n                                    {/**header title */}\r\n                                    <Wrap>\r\n                                        <WrapItem style={{ paddingLeft: 25 }}>\r\n                                            <h1>Administrator</h1>\r\n                                        </WrapItem>\r\n                                    </Wrap>\r\n\r\n                                    {/**drawer menu icon only visible when switched to mobile view*/}\r\n                                    <div className=\"menu_icon\" onClick={this.toggle_drawer}>\r\n                                        <FontAwesomeIcon icon={this.state.mobileview_menu_opened ? faTimes : faBars} />{/**change menu icon when toggled */}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                {/**drawer items */}\r\n                                <ul className={this.state.mobileview_menu_opened ? 'mobileview_drawer_list' : 'desktop_drawer_list'}>\r\n\r\n                                    {/**schedule list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('schedule')\r\n                                    }}>\r\n                                        <Link to=\"/staff/dashboard/schedule\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'schedule' ? 'selected_drawer_item' : 'unselected_drawer_item'}>\r\n\r\n                                                {/* <Icon fontSize='small' >star</Icon> */}\r\n                                                <FontAwesomeIcon icon={faCalendar} size=\"sm\" /> <p style={{ fontSize: 14 }}>Schedule</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**forum list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('forum')\r\n                                    }}>\r\n                                        <Link to=\"/staff/dashboard/forum\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'forum' ? 'selected_drawer_item' : 'unselected_drawer_item'}>\r\n                                                <FontAwesomeIcon icon={faBook} size=\"sm\" /> <p style={{ fontSize: 14, paddingRight: 25 }}>Forum</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**chatroom list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('chatroom')\r\n                                    }}>\r\n                                        <Link to=\"/staff/dashboard/chatroom\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'chatroom' ? 'selected_drawer_item' : 'unselected_drawer_item'}>\r\n                                                <FontAwesomeIcon icon={faComment} size=\"sm\" /> <p style={{ fontSize: 14 }}>Chatroom</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**logout button would appear as part of the drawer items  when switched to mobile view*/}\r\n                                    <li style={{ paddingTop: 20 }} className=\"logout_button_mobile_view\" >\r\n                                        <MUIButton fullWidth variant=\"contained\" color=\"primary\" >Logout</MUIButton>\r\n                                    </li>\r\n\r\n                                </ul>\r\n\r\n                                {/**logout bottom here appears only in desktop view */}\r\n                                <div className=\"logout_container_desktop_view\">\r\n                                    <MUIButton fullWidth variant=\"contained\" color=\"primary\" >Logout</MUIButton>\r\n                                </div>\r\n\r\n                            </nav>\r\n                        </div>\r\n\r\n                        {/**column 2 of page setup\r\n                         * pages of the selected link from the drawer will show here */}\r\n                        <div style={{ width: '100%' }}>\r\n                            <Switch>\r\n                                <Route exact path=\"/staff/dashboard/schedule\" component={ScheduleComponent} />\r\n                                <Route exact path=\"/staff/dashboard/forum\" component={ForumComponent} />\r\n                                <Route exact path=\"/staff/dashboard/chatroom\" component={ChatroomComponent} />\r\n                                <Route render={() => <ScheduleComponent />} /> {/**default page to open */}\r\n                            </Switch>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </ChakraProvider>\r\n            </BrowserRouter >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Staff_Dashboard;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Student_Dashboard.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128"],"import React, { Component } from 'react';\r\nimport '../Student_Dashboard/Student_Dashboard.css'\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\"\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, SimpleGrid, Box, Grid, GridItem, Wrap,\r\n    WrapItem, Avatar, Input, Stack, HStack, VStack, flexbox\r\n} from \"@chakra-ui/react\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**material ui imports */\r\nimport {\r\n    Button as MUIButton, List,\r\n    ListItem, ListItemIcon, ListItemText\r\n} from '@material-ui/core';\r\nimport { PeopleIcon } from '@material-ui/icons'\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n/**react bootstrap imports */\r\nimport {\r\n    Button as RBButton, Container, Row, Col,\r\n    Card,\r\n    CardDeck\r\n} from 'react-bootstrap';\r\n\r\n/**dashboard menu items */\r\nimport BookingComponent from './Dashboard_menu_items/Booking/Booking'\r\nimport MessagesComponent from './Dashboard_menu_items/Messages/Messages'\r\nimport ChatroomComponent from './Dashboard_menu_items/Chatroom/Chatroom'\r\n\r\n/**fontawesome icon imports */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faTimes, faBars, faCalendar, faBook,\r\n    faComment\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport Booking from './Dashboard_menu_items/Booking/Booking';\r\nlibrary.add(faTimes, faBars, faCalendar, faBook, faComment)\r\n\r\nclass Student_Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n            /**hamburger menu is hidden by default when page is viewed on desktop */\r\n            mobileview_menu_opened: false,\r\n\r\n            /**our default selected item in the drawer is booking\r\n             * the value changes when the user selects a different item in th drawer\r\n             * and we give the selected drawer item css properties to make it active */\r\n            selected_drawer_item: 'booking'\r\n        }\r\n\r\n    }\r\n\r\n    /**mobile view function to toggle the drawer */\r\n    toggle_drawer = () => {\r\n        this.setState({ mobileview_menu_opened: !this.state.mobileview_menu_opened })\r\n    }\r\n\r\n    /**after selecting any list item from the drawer in mobile view we want to automatically close the drawer */\r\n    close_drawer() {\r\n        this.setState({ mobileview_menu_opened: false })\r\n    }\r\n\r\n    /**set the selected drawer item to be active to differentiate it from other list items */\r\n    set_active_drawer_item(drawer_item_name) {\r\n        this.setState({ selected_drawer_item: drawer_item_name })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <ChakraProvider>\r\n\r\n                    {/**page setup */}\r\n                    <div className=\"pagesetups\">\r\n\r\n                        {/** column 1 of page setup...drawer menu */}\r\n                        <div className=\"sidemenu_columns\">\r\n\r\n                            {/**nav menu container */}\r\n                            <nav className=\"navmenu_containers\">\r\n\r\n                                {/**nav menu header */}\r\n                                <div className=\"navmenu_headers\" >\r\n\r\n                                    {/**header avatar */}\r\n                                    <Wrap className=\"avatar_wrapper_containers\" >\r\n                                        <WrapItem>\r\n                                            <Avatar size=\"sm\" name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\r\n                                        </WrapItem>\r\n                                    </Wrap>\r\n\r\n                                    {/**header title */}\r\n                                    <Wrap>\r\n                                        <WrapItem style={{ paddingLeft: 25 }}>\r\n                                            <h1>Student</h1>\r\n                                        </WrapItem>\r\n                                    </Wrap>\r\n\r\n                                    {/**drawer menu icon only visible when switched to mobile view*/}\r\n                                    <div className=\"menu_icons\" onClick={this.toggle_drawer}>\r\n                                        <FontAwesomeIcon icon={this.state.mobileview_menu_opened ? faTimes : faBars} />{/**change menu icon when toggled */}\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                {/**drawer items */}\r\n                                <ul className={this.state.mobileview_menu_opened ? 'mobileview_drawer_lists' : 'desktop_drawer_lists'}>\r\n\r\n                                    {/**booking list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('booking')\r\n                                    }}>\r\n                                        <Link to=\"/student/dashboard/booking\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'booking' ? 'selected_drawer_items' : 'unselected_drawer_items'}>\r\n\r\n                                                {/* <Icon fontSize='small' >star</Icon> */}\r\n                                                <FontAwesomeIcon icon={faCalendar} size=\"sm\" /> <p style={{ fontSize: 14 }}>Booking</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**messages list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('messages')\r\n                                    }}>\r\n                                        <Link to=\"/student/dashboard/messages\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'messages' ? 'selected_drawer_items' : 'unselected_drawer_items'}>\r\n                                                <FontAwesomeIcon icon={faBook} size=\"sm\" /> <p style={{ fontSize: 14 }}>Messages</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**chatroom list item */}\r\n                                    <li style={{ paddingTop: 20 }} onClick={() => {\r\n                                        this.close_drawer()\r\n                                        this.set_active_drawer_item('chatroom')\r\n                                    }}>\r\n                                        <Link to=\"/student/dashboard/chatroom\" style={{ textDecoration: 'none' }}>\r\n                                            <HStack spacing=\"10px\" className={this.state.selected_drawer_item === 'chatroom' ? 'selected_drawer_items' : 'unselected_drawer_items'}>\r\n                                                <FontAwesomeIcon icon={faComment} size=\"sm\" /> <p style={{ fontSize: 14 }}>Chatroom</p>\r\n                                            </HStack>\r\n                                        </Link>\r\n                                    </li>\r\n\r\n                                    {/**logout button would appear as part of the drawer items  when switched to mobile view*/}\r\n                                    <li style={{ paddingTop: 20 }} className=\"logout_button_mobile_views\" >\r\n                                        <MUIButton fullWidth variant=\"contained\" color=\"primary\" >Logout</MUIButton>\r\n                                    </li>\r\n\r\n                                </ul>\r\n\r\n                                {/**logout bottom here appears only in desktop view */}\r\n                                <div className=\"logout_container_desktop_views\">\r\n                                    <MUIButton fullWidth variant=\"contained\" color=\"primary\" >Logout</MUIButton>\r\n                                </div>\r\n\r\n                            </nav>\r\n                        </div>\r\n\r\n                        {/**column 2 of page setup\r\n                         * pages of the selected link from the drawer will show here */}\r\n                        <div style={{ width: '100%' }}>\r\n                            <Switch>\r\n                                <Route exact path=\"/student/dashboard/booking\" component={BookingComponent} />\r\n                                <Route exact path=\"/student/dashboard/messages\" component={MessagesComponent} />\r\n                                <Route exact path=\"/student/dashboard/chatroom\" component={ChatroomComponent} />\r\n                                <Route render={() => <BookingComponent />} /> {/**default page to open */}\r\n                            </Switch>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </ChakraProvider>\r\n            </BrowserRouter >\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default Student_Dashboard;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Chatroom\\Chatroom.js",["129"],"import React, { Component } from 'react';\r\n\r\nclass Chatroom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ height: '100vh', display: 'flex', background: 'transparent', justifyContent: 'center', alignItems: 'center' }}>Chatroom Page</div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Chatroom;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Forum\\Forum.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { Component } from 'react';\r\nimport '../Forum/Forum.css'\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, Stack, SimpleGrid, Box, Grid, GridItem,\r\n\r\n} from \"@chakra-ui/react\"\r\nimport { MdBuild, MdCall, MdCheckCircle, MdSettings } from \"react-icons/md\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**material ui imports */\r\nimport {\r\n    Button as MUIButton, TextField, List, ListItem,\r\n    FormControl, InputLabel, OutlinedInput,\r\n    InputAdornment, IconButton, ListItemIcon, Checkbox, ListItemText,\r\n    ListItemSecondaryAction, Divider, Typography\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, Search, Delete, Reply } from '@material-ui/icons'\r\n\r\n/**react bootstrap imports */\r\nimport {\r\n    Button as RBButton, Container, Row, Col,\r\n    Dropdown, DropdownButton, Table\r\n} from 'react-bootstrap';\r\n\r\nclass Forum extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ChakraProvider>\r\n\r\n                <Container fluid style={{ background: 'transparent', height: '100vh' }}>\r\n\r\n                    {/**row 1 of container containing the search box */}\r\n                    <Row style={{ background: 'transparent' }}>\r\n                        {/**search box takes half of the screen on desktops and full on mobile */}\r\n                        <Col xl={6}>\r\n                            <FormControl variant=\"outlined\" style={{ width: '100%', paddingTop: 15, paddingBottom: 10 }}>\r\n                                <OutlinedInput\r\n                                    style={{ height: 40 }}\r\n                                    placeholder=\"Search\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton aria-label=\"toggle password visibility\" edge=\"end\">\r\n                                                <Search />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xl={6}></Col>\r\n                    </Row>\r\n\r\n\r\n                    {/**row 2 of container containing messages using the list component*/}\r\n                    <Row>\r\n\r\n                        <Col style={{ paddingRight: 0 }}>\r\n\r\n                            {/**filter messages dropdown menu */}\r\n                            <DropdownButton id=\"dropdown-basic-button\" title=\"All messages\" style={{ paddingBottom: 10 }}>\r\n                                <Dropdown.Item href=\"#\">All</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Unread</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Read</Dropdown.Item>\r\n                            </DropdownButton>\r\n\r\n                            {/**list of messages */}\r\n                            <List\r\n                                style={{ background: 'reds', marginLeft: -10, marginRight: 0, height: '83vh', overflowY: 'scroll' }}\r\n                            >\r\n\r\n                                {/**message item */}\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Jane Doe\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Basic authentication using a password to Git is deprecated and will soon no longer work. Visit https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                {/* <Divider style={{ marginLeft: 10, marginRight: 10, background: 'black' }} /> */}\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Marco Van Ginkel\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Visit https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Dayot Upamecano\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            4:30pm\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Mary cobbs\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Basic authentication using a password to Git is deprecated and will soon no longer work. Visit https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Peter Parker\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Visit https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Bruce Wayne\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            deprecated andb.blog/2020-12-Basic authentication using a password to Git is 15-token-authentica will soon no longer work. Visit https://githur more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Bruce Banner\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            cauthentication using a passwordhub.ound suggested workaroundblog/2020-12-15-token-authentication-requirements-for-git-opBasis and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            LLoris Kane\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            will soon no longer work. Visit log/2020-12-15-token-authenticatio\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Ryan Reynolds\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            will soon no longer work. Visit https://githuBasic as.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Emma Watson\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ll soon no longer work. Visit https://github.blog/2020-12-15-token-authentication-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            John Doe\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ithub.blog/2020-12-15-token-authenticatBasic authentication us\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Mary Jane\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ing a password to Git is deprecated and will soon no longer work. Visit https://gkarounds and removal dates.for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Kurt Weller\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            equirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            John Doe\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            oken-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Tony Stark\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ormation around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Bruce Wayne\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Peter Parker\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            oken-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Mary cobbs\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ation-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Bruce Banner\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            ication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Jane Doe\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            n-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                        </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                         </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n\r\n\r\n                            </List>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </ChakraProvider >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Forum;\r\n",["152","153"],"C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Staff_Dashboard\\Dashboard_menu_items\\Schedule\\Schedule.js",["154","155","156","157","158","159"],"import React, { Component } from 'react';\r\nimport '../Schedule/Schedule.css'\r\n\r\nimport {\r\n    ScheduleComponent, Inject, Week,\r\n    WorkWeek, Month, Agenda, Day, EventSettingsModel,\r\n    ViewDirective, ViewsDirective, EventRenderedArgs, ActionEventArgs\r\n} from '@syncfusion/ej2-react-schedule';\r\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\r\nimport { L10n } from '@syncfusion/ej2-base'\r\n\r\n\r\nclass Schedule extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n        /**creating a new instance of the scheduler component allowing us to access the data in the scheduler\r\n         * and the default methods that come with the scheduler component*/\r\n        this.scheduleObj = ScheduleComponent;\r\n\r\n        this.state = {\r\n\r\n            data: [{\r\n                Id: 1,  /**must be unique for each event */\r\n\r\n                EventType: 'New',   /**for the dropdown in the editor window template */\r\n\r\n                Subject: \"Therapy Session\",    /**title for event */\r\n\r\n                /**start time of event\r\n                 * format is ('year' , 'month starting from Jan as 0' , 'day', '24hr time hour', '24hr time min') */\r\n                StartTime: new Date(2021, 1, 1, 18, 0),\r\n\r\n                EndTime: new Date(2021, 1, 1, 20, 59),  /**end time of event */\r\n\r\n                Location: 'BTech last floor',   /**location of event */\r\n\r\n                IsAllDay: false,\r\n\r\n                CategoryColor: '#f57f17',\r\n\r\n                // RecurrenceRule: 'FREQ=DAILY;INTERVAL=1;COUNT=5',\r\n\r\n                IsReadonly: true,  /**make event editable or not */\r\n\r\n            },\r\n            {\r\n                Id: 2,  /**must be unique for each event */\r\n\r\n                EventType: 'New',   /**for the dropdown in the editor window template */\r\n\r\n                Subject: \"Consultation Session\",    /**title for event */\r\n\r\n                /**start time of event\r\n                 * format is ('year' , 'month starting from Jan as 0' , 'day', '24hr time hour', '24hr time min') */\r\n                StartTime: '2021-02-02T09:00:00',\r\n\r\n                EndTime: 'Wed Feb 02 2021 09:45:00 GMT+0000 (Greenwich Mean Time)',  /**end time of event */\r\n\r\n                Location: 'BTech last floor',   /**location of event */\r\n\r\n                IsAllDay: false,\r\n\r\n                CategoryColor: '#f57f17',\r\n\r\n                // RecurrenceRule: 'FREQ=DAILY;INTERVAL=1;COUNT=5',\r\n\r\n                // IsReadonly: true,  /**make event editable or not */\r\n\r\n            },\r\n\r\n            {\r\n                Description: \"conference meetings\",\r\n                EndTime: 'Wed Feb 10 2021 17:30:00 GMT+0000 (Greenwich Mean Time)',\r\n                EndTimezone: null,\r\n                FollowingID: null,\r\n                Guid: \"f92cbd9a-ec99-92b0-3a05-5e93289a9ec5\",\r\n                Id: 3,\r\n                IsAllDay: false,\r\n                Location: \"yep\",\r\n                RecurrenceException: null,\r\n                RecurrenceID: null,\r\n                RecurrenceRule: \"FREQ=DAILY;INTERVAL=1;UNTIL=20210211T160000Z;\",\r\n                StartTime: 'Wed Feb 10 2021 16:00:00 GMT+0000 (Greenwich Mean Time)',\r\n                StartTimezone: null,\r\n                Subject: \"some action\"\r\n            }\r\n            ]\r\n        }\r\n    }\r\n\r\n    /**anything in here triggers before each of the event\r\n     * getting rendered on the scheduler user interface */\r\n    onEventRendered(args) {\r\n        // alert(\"It will triggered before each of the event getting rendered on the scheduler user interface.\");\r\n    }\r\n\r\n\r\n    /**anything in here triggers on beginning of every scheduler action */\r\n    onActionBegin(args) {\r\n\r\n        /**when an event is created */\r\n        if (args.requestType === \"eventCreate\") {\r\n            // alert(\"This will be triggered after a new event is rendered on the scheduler page\");\r\n            console.log('Added event: ', args.addedRecords)  /**retrieves the fields data of the newly created event */\r\n\r\n            /**built-in methods by the scheduler component */\r\n            // console.log('All events in the schedule :', this.scheduleObj.getEvents());  //Retrieves the entire collection of events bound to the Schedule.\r\n            // console.log('All events in the current view :', this.scheduleObj.getCurrentViewEvents())   //Retrieves the events that lies on the current date range of the active view of Schedule.\r\n            // console.log('Last id of event in the schedule :', this.scheduleObj.getEventMaxID())   //Get the maximum id of an event.\r\n            // this.scheduleObj.refreshEvents() //Refreshes the event dataSource. This method may be useful when the events alone in the schedule needs to be re-rendered.\r\n        }\r\n\r\n        /**when an event is changed or edited */\r\n        if (args.requestType === \"eventChange\") {\r\n            // alert(\"This will be triggered after an event has been edited or updated.\");\r\n            console.log('Updated event: ', args.changedRecords)    /**retrieves the fields data of the updated event */\r\n        }\r\n\r\n        /**when an event is removed */\r\n        if (args.requestType === \"eventRemove\") {\r\n            // alert(\"This will triggered after an event has been deleted\");\r\n            console.log('Deleted event: ', args.deletedRecords)    /**retrieves the fields data of the deleted event */\r\n        }\r\n    }\r\n\r\n\r\n    /**everything in here triggers on successful completion of the scheduler action */\r\n    onActionComplete(args) {\r\n        if (args.requestType === \"dateNavigate\") {\r\n            // alert(\"This will triggered after click the next/prev button\");\r\n            // console.log(this.scheduleObj.getCurrentViewDates())  //Retrieves the dates that lies on active view of Schedule.\r\n\r\n            /**retrieving the events after moving on to the next view page */\r\n            // let currentViewDates: Date[] = this.scheduleObj.getCurrentViewDates() as Date[];\r\n            // let startDate: Date = currentViewDates[4];\r\n            // let endDate: Date = currentViewDates[7];\r\n            // let filteredEvents: Object[] = this.scheduleObj.getEvents(startDate, endDate, true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            /**schedule component wrapper */\r\n            <ScheduleComponent\r\n                currentView=\"Month\" /**default view to be displayed in the scheduler */\r\n                width='100%' height='100vh' rowAutoHeight={true}\r\n                eventSettings={{\r\n                    dataSource: this.state.data,    /**fetch added events or schedules into the current view*/\r\n                }}\r\n                eventRendered={this.onEventRendered.bind(this)}\r\n                actionBegin={this.onActionBegin.bind(this)}\r\n                actionComplete={this.onActionComplete.bind(this)}\r\n                ref={schedule => this.scheduleObj = schedule}   /**we assign a reference to the new instance we created so that we can access the data and methods of the scheduler component */\r\n            >\r\n\r\n                {/**views we want to display in the top right corner of schedule page\r\n                 * delete all these to display default views */}\r\n                <ViewsDirective>\r\n                    <ViewDirective\r\n                        option='Month'\r\n                        showWeekNumber={false}\r\n                        showWeekend={true}  /**add sat and sun to month view */\r\n                    ></ViewDirective>\r\n                </ViewsDirective>\r\n\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n            </ScheduleComponent>\r\n\r\n\r\n        )\r\n    }\r\n\r\n}\r\nexport default Schedule;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Booking\\Booking.js",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { Component } from 'react';\r\nimport '../Booking/Booking.css'\r\nimport '../Booking/scheduler.css'\r\n\r\nimport {\r\n    ScheduleComponent, Inject, Week,\r\n    WorkWeek, Month, Agenda, Day, EventSettingsModel,\r\n    ViewDirective, ViewsDirective, EventRenderedArgs, ActionEventArgs\r\n} from '@syncfusion/ej2-react-schedule';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns'\r\nimport { DateTimePickerComponent } from '@syncfusion/ej2-react-calendars'\r\nimport { L10n } from '@syncfusion/ej2-base';\r\n\r\n\r\n/**material ui imports */\r\nimport { TextField } from '@material-ui/core';\r\n\r\n/**react bootstrap imports */\r\nimport { Button as RBButton, Container, Row, Col } from 'react-bootstrap';\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, Stack, SimpleGrid, Box, Grid, GridItem, VStack\r\n} from \"@chakra-ui/react\"\r\nimport { MdBuild, MdCall } from \"react-icons/md\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**customized editor window\r\n * changing the button texts\r\n * the editor window header text is hidden in the scheduler.css file\r\n */\r\nL10n.load({\r\n    'en-US': {\r\n        'schedule': {\r\n            'saveButton': 'Confirm',\r\n            'cancelButton': 'Close',\r\n            'newEvent': 'Book Appointment',\r\n            'editEvent': 'Book Appointment'\r\n        }\r\n    }\r\n})\r\n\r\nclass Booking extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        /**creating a new instance of the scheduler component allowing us to access the data in the scheduler\r\n         * and the default methods that come with the scheduler component*/\r\n        this.scheduleObj = ScheduleComponent;\r\n\r\n        this.state = {\r\n            data: [{\r\n                Id: 1,\r\n                Subject: \"Consultation Session\",\r\n                StartTime: '2021-02-02T09:00:00',\r\n                EndTime: 'Wed Feb 02 2021 09:45:00 GMT+0000 (Greenwich Mean Time)',\r\n                Location: 'BTech last floor',\r\n                IsAllDay: false,\r\n                IsReadonly: false\r\n            }]\r\n        }\r\n    }\r\n\r\n    /**when user selects an available booking slot event our customized window editor will\r\n     * show up allowing them to provide their details and then finally book the slot\r\n     */\r\n    editorWindowTemplate() {\r\n        return (\r\n            <VStack\r\n                spacing={5}\r\n                align=\"stretch\"\r\n                style={{ marginLeft: 20, marginRight: 20 }}\r\n            >\r\n                <TextField id=\"standard-basic\" label=\"Full name\" />\r\n\r\n                <TextField id=\"standard-basic\" label=\"Programme\" />\r\n\r\n                <TextField id=\"standard-basic\" label=\"Year\" />\r\n            </VStack>\r\n        )\r\n    }\r\n\r\n    /**disable the popup window when an event is clicked*/\r\n    onPopupOpen(args) {\r\n        args.cancel = true;\r\n    }\r\n\r\n    onActionBegin(args) {\r\n\r\n        /**if student wants to create a new event then we prevent it\r\n         * the student is only allowed to open the available booking slots and book an appointment \r\n         */\r\n        if (args.requestType === 'eventCreate') {\r\n            args.cancel = true;\r\n            alert('Access Denied')\r\n        }\r\n\r\n        /**a student is not allowed or permitted to remove a booking event created by the staff */\r\n        if (args.requestType === 'eventRemove') {\r\n            args.cancel = true\r\n            alert('Acess Denied!')\r\n        }\r\n\r\n        /**if the student opens an available appointmnet slot and proceeds to book an appointment\r\n         * the following is triggered\r\n         */\r\n        if (args.requestType === 'eventChange') {\r\n            alert('Appointment has been booked')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <ScheduleComponent\r\n                currentView=\"Month\" /**Month/Week/WorkWeek/Day */\r\n                width='100%' height='100vh' rowAutoHeight={true}\r\n                eventSettings={{ dataSource: this.state.data }} /**fetch added events or schedules into the current view*/\r\n                editorTemplate={this.editorWindowTemplate.bind(this)}\r\n                ref={schedule => this.scheduleObj = schedule}   /**we assign a reference to the new instance we created so that we can access the data and methods of the scheduler component */\r\n                actionBegin={this.onActionBegin.bind(this)}\r\n            // popupOpen={this.onPopupOpen.bind(this)}\r\n            >\r\n\r\n                {/**views we want to display in the top right corner of schedule page\r\n                 * delete all these to display default views */}\r\n                <ViewsDirective>\r\n                    <ViewDirective\r\n                        option='Month'\r\n                        showWeekNumber={false}\r\n                        showWeekend={true}  /**add sat and sun to month view */\r\n                    ></ViewDirective>\r\n                </ViewsDirective>\r\n\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n            </ScheduleComponent>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Booking;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Chatroom\\Chatroom.js",["181"],"import React, { Component } from 'react';\r\n\r\nclass Chatroom extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>Chatroom Page</div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Chatroom;","C:\\projects\\react js\\kstu-ecounseling\\kstu-ecounseling\\src\\pages\\Student_Dashboard\\Dashboard_menu_items\\Messages\\Messages.js",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { Component } from 'react';\r\nimport './Messages.css'\r\n\r\n/**chakra ui imports */\r\nimport {\r\n    ChakraProvider, Button as CUIButton,\r\n    ButtonGroup, Stack, SimpleGrid, Box, Grid, GridItem,\r\n\r\n} from \"@chakra-ui/react\"\r\nimport { MdBuild, MdCall, MdCheckCircle, MdSettings } from \"react-icons/md\"\r\nimport { FaFacebook, FaTwitter } from \"react-icons/fa\"\r\n\r\n/**material ui imports */\r\nimport {\r\n    Button as MUIButton, TextField, List, ListItem,\r\n    FormControl, InputLabel, OutlinedInput,\r\n    InputAdornment, IconButton, ListItemIcon, Checkbox, ListItemText,\r\n    ListItemSecondaryAction, Divider, Typography\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff, Search, Delete, Reply } from '@material-ui/icons'\r\n\r\n/**react bootstrap imports */\r\nimport {\r\n    Button as RBButton, Container, Row, Col,\r\n    Dropdown, DropdownButton, Table\r\n} from 'react-bootstrap';\r\n\r\nclass Messages extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ChakraProvider>\r\n\r\n                <Container fluid style={{ background: 'transparent', height: '100vh' }}>\r\n\r\n                    {/**row 1 of container containing the search box */}\r\n                    <Row style={{ background: 'transparent' }}>\r\n                        {/**search box takes half of the screen on desktops and full on mobile */}\r\n                        <Col xl={6}>\r\n                            <FormControl variant=\"outlined\" style={{ width: '100%', paddingTop: 15, paddingBottom: 10 }}>\r\n                                <OutlinedInput\r\n                                    style={{ height: 40 }}\r\n                                    placeholder=\"Search\"\r\n                                    endAdornment={\r\n                                        <InputAdornment position=\"end\">\r\n                                            <IconButton aria-label=\"toggle password visibility\" edge=\"end\">\r\n                                                <Search />\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col xl={6}></Col>\r\n                    </Row>\r\n\r\n\r\n                    {/**row 2 of container containing messages using the list component*/}\r\n                    <Row>\r\n\r\n                        <Col style={{ paddingRight: 0 }}>\r\n\r\n                            {/**filter messages dropdown menu */}\r\n                            <DropdownButton id=\"dropdown-basic-button\" title=\"All messages\" style={{ paddingBottom: 10 }}>\r\n                                <Dropdown.Item href=\"#\">All</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Inbox</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#\">Sent</Dropdown.Item>\r\n                            </DropdownButton>\r\n\r\n                            {/**list of messages */}\r\n                            <List\r\n                                style={{ background: 'reds', marginLeft: -10, marginRight: 0, height: '83vh', overflowY: 'scroll' }}\r\n                            >\r\n\r\n                                {/**message item */}\r\n                                <ListItem style={{ paddingTop: 0, paddingBottom: 0, paddingLeft: 15 }} className=\"list_items_student\">\r\n\r\n                                    {/**checkbox */}\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge=\"start\"\r\n                                            disableRipple={false} />\r\n                                    </ListItemIcon>\r\n\r\n                                    {/**sender name */}\r\n                                    <ListItemText className=\"sender_name_student\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Jane Doe\r\n                                    </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message */}\r\n                                    <ListItemText className=\"message_student\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 14 }}>\r\n                                            Basic authentication using a password to Git is deprecated and will soon no longer work. Visit https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information around suggested workarounds and removal dates.\r\n                                    </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**message time stamp */}\r\n                                    <ListItemText className=\"message_time_stamp_student\">\r\n                                        <Typography noWrap={true} style={{ fontSize: 12 }}>\r\n                                            8:30pm\r\n                                    </Typography>\r\n                                    </ListItemText>\r\n\r\n                                    {/**edit and delete buttons */}\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Reply style={{ color: 'green' }} />\r\n                                        </IconButton>\r\n                                        <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                            <Delete style={{ color: 'red' }} />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                                {/* <Divider style={{ marginLeft: 10, marginRight: 10, background: 'black' }} /> */}\r\n\r\n\r\n\r\n                            </List>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </ChakraProvider >\r\n        )\r\n    }\r\n\r\n}\r\nexport default Messages;",{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":7,"column":18,"nodeType":"210","messageId":"211","endLine":7,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":22,"column":5,"nodeType":"214","messageId":"215","endLine":25,"endColumn":6},{"ruleId":"208","severity":1,"message":"216","line":7,"column":5,"nodeType":"210","messageId":"211","endLine":7,"endColumn":16},{"ruleId":"208","severity":1,"message":"217","line":7,"column":25,"nodeType":"210","messageId":"211","endLine":7,"endColumn":35},{"ruleId":"208","severity":1,"message":"218","line":7,"column":37,"nodeType":"210","messageId":"211","endLine":7,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":7,"column":42,"nodeType":"210","messageId":"211","endLine":7,"endColumn":46},{"ruleId":"208","severity":1,"message":"220","line":7,"column":48,"nodeType":"210","messageId":"211","endLine":7,"endColumn":56},{"ruleId":"208","severity":1,"message":"221","line":13,"column":15,"nodeType":"210","messageId":"211","endLine":13,"endColumn":24},{"ruleId":"208","severity":1,"message":"222","line":14,"column":5,"nodeType":"210","messageId":"211","endLine":14,"endColumn":14},{"ruleId":"208","severity":1,"message":"223","line":19,"column":15,"nodeType":"210","messageId":"211","endLine":19,"endColumn":23},{"ruleId":"208","severity":1,"message":"224","line":21,"column":5,"nodeType":"210","messageId":"211","endLine":21,"endColumn":13},{"ruleId":"208","severity":1,"message":"225","line":25,"column":10,"nodeType":"210","messageId":"211","endLine":25,"endColumn":14},{"ruleId":"208","severity":1,"message":"226","line":7,"column":31,"nodeType":"210","messageId":"211","endLine":7,"endColumn":40},{"ruleId":"208","severity":1,"message":"216","line":8,"column":5,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"217","line":8,"column":18,"nodeType":"210","messageId":"211","endLine":8,"endColumn":28},{"ruleId":"208","severity":1,"message":"218","line":8,"column":30,"nodeType":"210","messageId":"211","endLine":8,"endColumn":33},{"ruleId":"208","severity":1,"message":"219","line":8,"column":35,"nodeType":"210","messageId":"211","endLine":8,"endColumn":39},{"ruleId":"208","severity":1,"message":"220","line":8,"column":41,"nodeType":"210","messageId":"211","endLine":8,"endColumn":49},{"ruleId":"208","severity":1,"message":"227","line":9,"column":23,"nodeType":"210","messageId":"211","endLine":9,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":9,"column":30,"nodeType":"210","messageId":"211","endLine":9,"endColumn":35},{"ruleId":"208","severity":1,"message":"228","line":9,"column":45,"nodeType":"210","messageId":"211","endLine":9,"endColumn":51},{"ruleId":"208","severity":1,"message":"229","line":9,"column":53,"nodeType":"210","messageId":"211","endLine":9,"endColumn":60},{"ruleId":"208","severity":1,"message":"230","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":11,"column":22,"nodeType":"210","messageId":"211","endLine":11,"endColumn":31},{"ruleId":"208","severity":1,"message":"232","line":15,"column":26,"nodeType":"210","messageId":"211","endLine":15,"endColumn":30},{"ruleId":"208","severity":1,"message":"233","line":16,"column":5,"nodeType":"210","messageId":"211","endLine":16,"endColumn":13},{"ruleId":"208","severity":1,"message":"234","line":16,"column":15,"nodeType":"210","messageId":"211","endLine":16,"endColumn":27},{"ruleId":"208","severity":1,"message":"235","line":16,"column":29,"nodeType":"210","messageId":"211","endLine":16,"endColumn":41},{"ruleId":"208","severity":1,"message":"236","line":18,"column":10,"nodeType":"210","messageId":"211","endLine":18,"endColumn":20},{"ruleId":"208","severity":1,"message":"237","line":19,"column":8,"nodeType":"210","messageId":"211","endLine":19,"endColumn":12},{"ruleId":"208","severity":1,"message":"223","line":23,"column":15,"nodeType":"210","messageId":"211","endLine":23,"endColumn":23},{"ruleId":"208","severity":1,"message":"238","line":23,"column":25,"nodeType":"210","messageId":"211","endLine":23,"endColumn":34},{"ruleId":"208","severity":1,"message":"239","line":23,"column":36,"nodeType":"210","messageId":"211","endLine":23,"endColumn":39},{"ruleId":"208","severity":1,"message":"240","line":23,"column":41,"nodeType":"210","messageId":"211","endLine":23,"endColumn":44},{"ruleId":"208","severity":1,"message":"241","line":24,"column":5,"nodeType":"210","messageId":"211","endLine":24,"endColumn":9},{"ruleId":"208","severity":1,"message":"224","line":25,"column":5,"nodeType":"210","messageId":"211","endLine":25,"endColumn":13},{"ruleId":"208","severity":1,"message":"226","line":7,"column":31,"nodeType":"210","messageId":"211","endLine":7,"endColumn":40},{"ruleId":"208","severity":1,"message":"216","line":8,"column":5,"nodeType":"210","messageId":"211","endLine":8,"endColumn":16},{"ruleId":"208","severity":1,"message":"217","line":8,"column":18,"nodeType":"210","messageId":"211","endLine":8,"endColumn":28},{"ruleId":"208","severity":1,"message":"218","line":8,"column":30,"nodeType":"210","messageId":"211","endLine":8,"endColumn":33},{"ruleId":"208","severity":1,"message":"219","line":8,"column":35,"nodeType":"210","messageId":"211","endLine":8,"endColumn":39},{"ruleId":"208","severity":1,"message":"220","line":8,"column":41,"nodeType":"210","messageId":"211","endLine":8,"endColumn":49},{"ruleId":"208","severity":1,"message":"227","line":9,"column":23,"nodeType":"210","messageId":"211","endLine":9,"endColumn":28},{"ruleId":"208","severity":1,"message":"209","line":9,"column":30,"nodeType":"210","messageId":"211","endLine":9,"endColumn":35},{"ruleId":"208","severity":1,"message":"228","line":9,"column":45,"nodeType":"210","messageId":"211","endLine":9,"endColumn":51},{"ruleId":"208","severity":1,"message":"229","line":9,"column":53,"nodeType":"210","messageId":"211","endLine":9,"endColumn":60},{"ruleId":"208","severity":1,"message":"230","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":11,"column":22,"nodeType":"210","messageId":"211","endLine":11,"endColumn":31},{"ruleId":"208","severity":1,"message":"232","line":15,"column":26,"nodeType":"210","messageId":"211","endLine":15,"endColumn":30},{"ruleId":"208","severity":1,"message":"233","line":16,"column":5,"nodeType":"210","messageId":"211","endLine":16,"endColumn":13},{"ruleId":"208","severity":1,"message":"234","line":16,"column":15,"nodeType":"210","messageId":"211","endLine":16,"endColumn":27},{"ruleId":"208","severity":1,"message":"235","line":16,"column":29,"nodeType":"210","messageId":"211","endLine":16,"endColumn":41},{"ruleId":"208","severity":1,"message":"236","line":18,"column":10,"nodeType":"210","messageId":"211","endLine":18,"endColumn":20},{"ruleId":"208","severity":1,"message":"237","line":19,"column":8,"nodeType":"210","messageId":"211","endLine":19,"endColumn":12},{"ruleId":"208","severity":1,"message":"223","line":23,"column":15,"nodeType":"210","messageId":"211","endLine":23,"endColumn":23},{"ruleId":"208","severity":1,"message":"238","line":23,"column":25,"nodeType":"210","messageId":"211","endLine":23,"endColumn":34},{"ruleId":"208","severity":1,"message":"239","line":23,"column":36,"nodeType":"210","messageId":"211","endLine":23,"endColumn":39},{"ruleId":"208","severity":1,"message":"240","line":23,"column":41,"nodeType":"210","messageId":"211","endLine":23,"endColumn":44},{"ruleId":"208","severity":1,"message":"241","line":24,"column":5,"nodeType":"210","messageId":"211","endLine":24,"endColumn":9},{"ruleId":"208","severity":1,"message":"224","line":25,"column":5,"nodeType":"210","messageId":"211","endLine":25,"endColumn":13},{"ruleId":"208","severity":1,"message":"242","line":40,"column":8,"nodeType":"210","messageId":"211","endLine":40,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":5,"column":5,"nodeType":"214","messageId":"215","endLine":7,"endColumn":6},{"ruleId":"208","severity":1,"message":"226","line":6,"column":31,"nodeType":"210","messageId":"211","endLine":6,"endColumn":40},{"ruleId":"208","severity":1,"message":"216","line":7,"column":5,"nodeType":"210","messageId":"211","endLine":7,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":7,"column":18,"nodeType":"210","messageId":"211","endLine":7,"endColumn":23},{"ruleId":"208","severity":1,"message":"217","line":7,"column":25,"nodeType":"210","messageId":"211","endLine":7,"endColumn":35},{"ruleId":"208","severity":1,"message":"218","line":7,"column":37,"nodeType":"210","messageId":"211","endLine":7,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":7,"column":42,"nodeType":"210","messageId":"211","endLine":7,"endColumn":46},{"ruleId":"208","severity":1,"message":"220","line":7,"column":48,"nodeType":"210","messageId":"211","endLine":7,"endColumn":56},{"ruleId":"208","severity":1,"message":"243","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":10,"column":19,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"245","line":10,"column":27,"nodeType":"210","messageId":"211","endLine":10,"endColumn":40},{"ruleId":"208","severity":1,"message":"246","line":10,"column":42,"nodeType":"210","messageId":"211","endLine":10,"endColumn":52},{"ruleId":"208","severity":1,"message":"230","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":11,"column":22,"nodeType":"210","messageId":"211","endLine":11,"endColumn":31},{"ruleId":"208","severity":1,"message":"221","line":15,"column":15,"nodeType":"210","messageId":"211","endLine":15,"endColumn":24},{"ruleId":"208","severity":1,"message":"222","line":15,"column":26,"nodeType":"210","messageId":"211","endLine":15,"endColumn":35},{"ruleId":"208","severity":1,"message":"247","line":16,"column":18,"nodeType":"210","messageId":"211","endLine":16,"endColumn":28},{"ruleId":"208","severity":1,"message":"248","line":18,"column":30,"nodeType":"210","messageId":"211","endLine":18,"endColumn":37},{"ruleId":"208","severity":1,"message":"249","line":20,"column":10,"nodeType":"210","messageId":"211","endLine":20,"endColumn":20},{"ruleId":"208","severity":1,"message":"250","line":20,"column":22,"nodeType":"210","messageId":"211","endLine":20,"endColumn":35},{"ruleId":"208","severity":1,"message":"223","line":24,"column":15,"nodeType":"210","messageId":"211","endLine":24,"endColumn":23},{"ruleId":"208","severity":1,"message":"251","line":25,"column":31,"nodeType":"210","messageId":"211","endLine":25,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":30,"column":5,"nodeType":"214","messageId":"215","endLine":32,"endColumn":6},{"ruleId":"204","replacedBy":"252"},{"ruleId":"206","replacedBy":"253"},{"ruleId":"208","severity":1,"message":"254","line":6,"column":35,"nodeType":"210","messageId":"211","endLine":6,"endColumn":53},{"ruleId":"208","severity":1,"message":"255","line":7,"column":36,"nodeType":"210","messageId":"211","endLine":7,"endColumn":53},{"ruleId":"208","severity":1,"message":"256","line":7,"column":55,"nodeType":"210","messageId":"211","endLine":7,"endColumn":70},{"ruleId":"208","severity":1,"message":"257","line":9,"column":10,"nodeType":"210","messageId":"211","endLine":9,"endColumn":21},{"ruleId":"208","severity":1,"message":"258","line":9,"column":23,"nodeType":"210","messageId":"211","endLine":9,"endColumn":36},{"ruleId":"208","severity":1,"message":"259","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":14},{"ruleId":"208","severity":1,"message":"254","line":7,"column":35,"nodeType":"210","messageId":"211","endLine":7,"endColumn":53},{"ruleId":"208","severity":1,"message":"255","line":8,"column":36,"nodeType":"210","messageId":"211","endLine":8,"endColumn":53},{"ruleId":"208","severity":1,"message":"256","line":8,"column":55,"nodeType":"210","messageId":"211","endLine":8,"endColumn":70},{"ruleId":"208","severity":1,"message":"260","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":31},{"ruleId":"208","severity":1,"message":"261","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":33},{"ruleId":"208","severity":1,"message":"223","line":19,"column":20,"nodeType":"210","messageId":"211","endLine":19,"endColumn":28},{"ruleId":"208","severity":1,"message":"238","line":19,"column":30,"nodeType":"210","messageId":"211","endLine":19,"endColumn":39},{"ruleId":"208","severity":1,"message":"239","line":19,"column":41,"nodeType":"210","messageId":"211","endLine":19,"endColumn":44},{"ruleId":"208","severity":1,"message":"240","line":19,"column":46,"nodeType":"210","messageId":"211","endLine":19,"endColumn":49},{"ruleId":"208","severity":1,"message":"262","line":23,"column":5,"nodeType":"210","messageId":"211","endLine":23,"endColumn":19},{"ruleId":"208","severity":1,"message":"226","line":23,"column":31,"nodeType":"210","messageId":"211","endLine":23,"endColumn":40},{"ruleId":"208","severity":1,"message":"216","line":24,"column":5,"nodeType":"210","messageId":"211","endLine":24,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":24,"column":18,"nodeType":"210","messageId":"211","endLine":24,"endColumn":23},{"ruleId":"208","severity":1,"message":"217","line":24,"column":25,"nodeType":"210","messageId":"211","endLine":24,"endColumn":35},{"ruleId":"208","severity":1,"message":"218","line":24,"column":37,"nodeType":"210","messageId":"211","endLine":24,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":24,"column":42,"nodeType":"210","messageId":"211","endLine":24,"endColumn":46},{"ruleId":"208","severity":1,"message":"220","line":24,"column":48,"nodeType":"210","messageId":"211","endLine":24,"endColumn":56},{"ruleId":"208","severity":1,"message":"243","line":26,"column":10,"nodeType":"210","messageId":"211","endLine":26,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":26,"column":19,"nodeType":"210","messageId":"211","endLine":26,"endColumn":25},{"ruleId":"208","severity":1,"message":"230","line":27,"column":10,"nodeType":"210","messageId":"211","endLine":27,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":27,"column":22,"nodeType":"210","messageId":"211","endLine":27,"endColumn":31},{"ruleId":"212","severity":1,"message":"213","line":5,"column":5,"nodeType":"214","messageId":"215","endLine":7,"endColumn":6},{"ruleId":"208","severity":1,"message":"226","line":6,"column":31,"nodeType":"210","messageId":"211","endLine":6,"endColumn":40},{"ruleId":"208","severity":1,"message":"216","line":7,"column":5,"nodeType":"210","messageId":"211","endLine":7,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":7,"column":18,"nodeType":"210","messageId":"211","endLine":7,"endColumn":23},{"ruleId":"208","severity":1,"message":"217","line":7,"column":25,"nodeType":"210","messageId":"211","endLine":7,"endColumn":35},{"ruleId":"208","severity":1,"message":"218","line":7,"column":37,"nodeType":"210","messageId":"211","endLine":7,"endColumn":40},{"ruleId":"208","severity":1,"message":"219","line":7,"column":42,"nodeType":"210","messageId":"211","endLine":7,"endColumn":46},{"ruleId":"208","severity":1,"message":"220","line":7,"column":48,"nodeType":"210","messageId":"211","endLine":7,"endColumn":56},{"ruleId":"208","severity":1,"message":"243","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"208","severity":1,"message":"244","line":10,"column":19,"nodeType":"210","messageId":"211","endLine":10,"endColumn":25},{"ruleId":"208","severity":1,"message":"245","line":10,"column":27,"nodeType":"210","messageId":"211","endLine":10,"endColumn":40},{"ruleId":"208","severity":1,"message":"246","line":10,"column":42,"nodeType":"210","messageId":"211","endLine":10,"endColumn":52},{"ruleId":"208","severity":1,"message":"230","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":20},{"ruleId":"208","severity":1,"message":"231","line":11,"column":22,"nodeType":"210","messageId":"211","endLine":11,"endColumn":31},{"ruleId":"208","severity":1,"message":"221","line":15,"column":15,"nodeType":"210","messageId":"211","endLine":15,"endColumn":24},{"ruleId":"208","severity":1,"message":"222","line":15,"column":26,"nodeType":"210","messageId":"211","endLine":15,"endColumn":35},{"ruleId":"208","severity":1,"message":"247","line":16,"column":18,"nodeType":"210","messageId":"211","endLine":16,"endColumn":28},{"ruleId":"208","severity":1,"message":"248","line":18,"column":30,"nodeType":"210","messageId":"211","endLine":18,"endColumn":37},{"ruleId":"208","severity":1,"message":"249","line":20,"column":10,"nodeType":"210","messageId":"211","endLine":20,"endColumn":20},{"ruleId":"208","severity":1,"message":"250","line":20,"column":22,"nodeType":"210","messageId":"211","endLine":20,"endColumn":35},{"ruleId":"208","severity":1,"message":"223","line":24,"column":15,"nodeType":"210","messageId":"211","endLine":24,"endColumn":23},{"ruleId":"208","severity":1,"message":"251","line":25,"column":31,"nodeType":"210","messageId":"211","endLine":25,"endColumn":36},{"ruleId":"212","severity":1,"message":"213","line":30,"column":5,"nodeType":"214","messageId":"215","endLine":32,"endColumn":6},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ButtonGroup' is defined but never used.","'SimpleGrid' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'GridItem' is defined but never used.","'MUIButton' is defined but never used.","'TextField' is defined but never used.","'RBButton' is defined but never used.","'CardDeck' is defined but never used.","'Zoom' is defined but never used.","'CUIButton' is defined but never used.","'Input' is defined but never used.","'VStack' is defined but never used.","'flexbox' is defined but never used.","'FaFacebook' is defined but never used.","'FaTwitter' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'PeopleIcon' is defined but never used.","'Icon' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Booking' is defined but never used.","'MdBuild' is defined but never used.","'MdCall' is defined but never used.","'MdCheckCircle' is defined but never used.","'MdSettings' is defined but never used.","'InputLabel' is defined but never used.","'Divider' is defined but never used.","'Visibility' is defined but never used.","'VisibilityOff' is defined but never used.","'Table' is defined but never used.",["263"],["264"],"'EventSettingsModel' is defined but never used.","'EventRenderedArgs' is defined but never used.","'ActionEventArgs' is defined but never used.","'DataManager' is defined but never used.","'WebApiAdaptor' is defined but never used.","'L10n' is defined but never used.","'DropDownListComponent' is defined but never used.","'DateTimePickerComponent' is defined but never used.","'ChakraProvider' is defined but never used.","no-global-assign","no-unsafe-negation"]